<%@ Page Language="c#" %>

<!--%@ import Namespace="System.IO" %-->
<!--파일 로그 사용 시 주석 해제-->
<html>
<!--
    /* ============================================================================== */
    /* =   PAGE : 공통 통보 PAGE                                                    = */
    /* = -------------------------------------------------------------------------- = */
    /* =   연동시 오류가 발생하는 경우 아래의 주소로 접속하셔서 확인하시기 바랍니다.= */
    /* =   접속 주소 : http://kcp.co.kr/technique.requestcode.do                    = */
    /* = -------------------------------------------------------------------------- = */
    /* =   Copyright (c)  2016  NHN KCP Inc.   All Rights Reserverd.                = */
    /* ============================================================================== */

    /* ============================================================================== */
    /* =   01. 공통 통보 페이지 설명(필독!!)                                        = */
    /* = -------------------------------------------------------------------------- = */
    /* =   공통 통보 페이지에서는,                                                  = */
    /* =   가상계좌 입금 통보 데이터를 KCP를 통해 실시간으로 통보 받을 수 있습니다. = */
    /* =                                                                            = */
    /* =   common_return 페이지는 이러한 통보 데이터를 받기 위한 샘플 페이지        = */
    /* =   입니다. 현재의 페이지를 업체에 맞게 수정하신 후, 아래 사항을 참고하셔서  = */
    /* =   KCP 관리자 페이지에 등록해 주시기 바랍니다.                              = */
    /* =                                                                            = */
    /* =   등록 방법은 다음과 같습니다.                                             = */
    /* =  - KCP 관리자페이지(admin.kcp.co.kr)에 로그인 합니다.                      = */
    /* =  - [쇼핑몰 관리] -> [정보변경] -> [공통 URL 정보] -> 공통 URL 변경 후에    = */
    /* =    가맹점 URL을 입력합니다.                                                = */
    /* ============================================================================== */
-->

<script runat="server">
    void GetData(Object sender, System.EventArgs e)
    {
        string site_cd = Request.Params["site_cd"];     // 사이트 코드
        string tno = Request.Params["tno"];             // KCP 거래번호
        string order_no = Request.Params["order_no"];   // 주문번호
        string tx_cd = Request.Params["tx_cd"];         // 업무처리 구분 코드
        string tx_tm = Request.Params["tx_tm"];         // 업무처리 완료 시간

        string ipgm_name;                                  // 주문자명
        string remitter;                                   // 입금자명
        string ipgm_mnyx;                                  // 입금 금액
        string bank_code;                                  // 은행코드
        string account;                                    // 가상계좌 입금계좌번호
        string op_cd;                                      // 처리구분 코드
        string noti_id;                                    // 통보 아이디
        string cash_a_no;                                  // 현금영수증 승인번호
        string cash_a_dt;                                  // 현금영수증 승인시간
		string cash_no;                                    // 현금영수증 거래번호
        /* = -------------------------------------------------------------------------- = */
        /* =   02-1. 가상계좌 입금 통보 데이터 받기                                     = */
        /* = -------------------------------------------------------------------------- = */
        if (tx_cd == "TX00")
        {
            ipgm_name = Request.Params["ipgm_name"];
            remitter = Request.Params["remitter"];
            ipgm_mnyx = Request.Params["ipgm_mnyx"];
            bank_code = Request.Params["bank_code"];
            account = Request.Params["account"];
            op_cd = Request.Params["op_cd"];
            noti_id = Request.Params["noti_id"];
            cash_a_no = Request.Params["cash_a_no"];
            cash_a_dt = Request.Params["cash_a_dt"];
			cash_no = Request.Params["cash_no"];
        }


        /* ============================================================================== */
        /* =   03. 공통 통보 결과를 업체 자체적으로 DB 처리 작업하시는 부분입니다.      = */
        /* = -------------------------------------------------------------------------- = */
        /* =   통보 결과를 DB 작업 하는 과정에서 정상적으로 통보된 건에 대해 DB 작업을  = */
        /* =   실패하여 DB update 가 완료되지 않은 경우, 결과를 재통보 받을 수 있는     = */
        /* =   프로세스가 구성되어 있습니다. 소스에서 result 라는 Form 값을 생성 하신   = */
        /* =   후, DB 작업이 성공 한 경우, result 의 값을 "0000" 로 세팅해 주시고,      = */
        /* =   DB 작업이 실패 한 경우, result 의 값을 "0000" 이외의 값으로 세팅해 주시  = */
        /* =   기 바랍니다. result 값이 "0000" 이 아닌 경우에는 재통보를 받게 됩니다.   = */
        /* = -------------------------------------------------------------------------- = */

        /* = -------------------------------------------------------------------------- = */
        /* =   03-1. 가상계좌 입금 통보 데이터 DB 처리 작업 부분                        = */
        /* = -------------------------------------------------------------------------- = */
        if (tx_cd == "TX00")
        {
            //DB처리 코드 삽입        
        }
    }
</script>

<body>
    <form id="RetForm" runat="server">
        <asp:Label ID="lblMsg" runat="Server" OnLoad="GetData" />
        <input type="hidden" name="result" value="0000">
    </form>
</body>
</html>
